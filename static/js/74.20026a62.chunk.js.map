{"version":3,"file":"static/js/74.20026a62.chunk.js","mappings":"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","sources":["helpers/fixDate.js","components/pagination/pagination.jsx","components/transactionTable/transactionsTable.styled.js","components/transactionTable/transactionTable.jsx","components/addTransaction/helpers/formikTransactionSchema.js","components/addTransaction/helpers/checkValidDate.js","components/addTransaction/addTransactionForm/addTransanctionForm.styled.js","components/addTransaction/addTransactionForm/addTransactionFormSelect/addTransactionFormSelect.styled.js","components/addTransaction/addTransactionForm/addTransactionFormSelect/addTransactionFormSelect.jsx","components/addTransaction/addTransactionModal/addTransactionModal.styled.js","components/addTransaction/addTransactionForm/addTransactionForm.jsx","components/addTransaction/addTransactionModal/addTransactionModal.jsx","components/addTransaction/addTransactionButton/addTransactionButton.styled.js","components/addTransaction/addTransactionButton/addTransactionButton.jsx","components/homeTab/homeTab.styled.js","components/homeTab/homeTab.jsx"],"sourcesContent":["export const fixDate = date => {\n  const dateString = new Date(date);\n  const day = dateString\n    .getDate()\n    .toString()\n    .padStart(2, '0');\n  const month = (dateString.getMonth() + 1).toString().padStart(2, '0');\n  const year = dateString.getFullYear().toString();\n  return `${day}.${month}.${year}`;\n};\n","import ReactPaginate from 'react-paginate';\nimport './pagination.scss';\n\nexport function PaginatedItems({ pageCount, setItemOffset }) {\n  const handlePageClick = event => {\n    setItemOffset(event.selected);\n  };\n\n  return (\n    <>\n      {' '}\n      <ReactPaginate\n        breakLabel=\"...\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={5}\n        pageCount={pageCount}\n        previousLabel={'← Previous'}\n        nextLabel={'Next →'}\n        renderOnZeroPageCount={null}\n        containerClassName={'pagination'}\n        previousLinkClassName={'pagination__link'}\n        nextLinkClassName={'pagination__link'}\n        disabledClassName={'pagination__link--disabled'}\n        activeClassName={'pagination__link--active'}\n      />\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const TableWrapper = styled.table`\n  width: 100%;\n  max-width: 320px;\n  overflow: hidden scroll;\n\n  text-align: center;\n  @media screen and (min-width: 768px) {\n    margin: 0 auto;\n    max-width: 704px;\n  }\n  @media screen and (min-width: 1280px) {\n    max-width: 715px;\n    max-height: 65vh;\n    margin-left: 69px;\n  }\n`;\n\nexport const TableHead = styled.tr`\n  display: flex;\n  align-items: center;\n  font-size: 18px;\n  line-height: 27px;\n  height: 58px;\n  padding: 0px 7.5px;\n  border-radius: 30px;\n  background-color: white;\n`;\n\nexport const TableHeadItem = styled.th`\n  padding: 10px;\n\n  width: 50px;\n  &:nth-child(1) {\n    margin-right: 45px;\n  }\n  &:nth-child(2) {\n    margin-right: 40px;\n  }\n  &:nth-child(3) {\n    margin-right: 85px;\n  }\n  &:nth-child(4) {\n    margin-right: 125px;\n  }\n  &:nth-child(5) {\n    margin-right: 43px;\n  }\n`;\n\nexport const Data = styled.tr`\n  position: relative;\n  display: flex;\n  align-items: center;\n  word-wrap: break-word;\n  padding: 0px 7.5px;\n  font-size: 16px;\n  line-height: 24px;\n  min-height: 52px;\n  &:not(:last-child) {\n    &::after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: 10;\n      bottom: 0;\n      width: 680px;\n      border: 1px solid #dcdcdf;\n      box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n    }\n  }\n`;\n\nexport const DataItem = styled.td`\n  padding: 8px 10px;\n\n  color: var(--primary-text-color);\n  font-weight: 400;\n  font-size: 16px;\n  @media screen and (min-width: 320px) {\n    &:nth-child(1) {\n      width: 70px;\n      margin-right: 10px;\n    }\n    &:nth-child(2) {\n      width: 80px;\n      margin-right: 25px;\n    }\n    &:nth-child(3) {\n      width: 80px;\n      margin-right: 60px;\n    }\n    &:nth-child(4) {\n      width: 100px;\n      margin-right: 50px;\n    }\n    &:nth-child(5) {\n      width: 80px;\n      margin-right: 10px;\n    }\n    &:nth-child(6) {\n      width: 90px;\n      margin-left: 25px;\n    }\n  }\n`;\n\nexport const DataComment = styled.span`\n  width: 80px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: pre-line;\n`;\n\nexport const DataSum = styled.span`\n  color: ${props =>\n    props.type === 'true'\n      ? 'var(--accent-color-grean)'\n      : 'var(--accent-color-red)'};\n`;\n\nexport const DataMob = styled.ul`\n  width: 290px;\n  padding: 12px 20px;\n\n  border-radius: 10px;\n  border-left: 5px solid\n    ${props =>\n      props.type === 'true'\n        ? 'var(--accent-color-grean)'\n        : 'var(--accent-color-red)'};\n  &:not(:last-child) {\n    margin: 0 auto 8px;\n  }\n  background: #ffffff;\n`;\n\nexport const HeadItemMob = styled.span`\n  display: block;\n  text-align: end;\n  max-width: 110px;\n\n  white-space: nowrap;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n`;\n\nexport const DataItemMob = styled.li`\n  display: flex;\n    flex-grow: 1;    \n    align-items: center;\n    &:not(:last-child) {\n      border-bottom: 1px solid #dcdcdf;\n    }\n  }\n\n  justify-content: space-between;  \n  height: 47px;\n  line-height: calc(24 / 16);\n  ;\n`;\n","import { useMedia } from 'react-use';\nimport { useState } from 'react';\nimport { fixDate } from 'helpers/fixDate';\nimport { useGetTransactionsQuery } from '../../redux/transactionsSlice';\nimport { PaginatedItems } from '../pagination/pagination';\n\nimport {\n  TableWrapper,\n  TableHeadItem,\n  DataItem,\n  TableHead,\n  Data,\n  DataSum,\n  DataComment,\n  DataMob,\n  DataItemMob,\n  HeadItemMob,\n} from './transactionsTable.styled';\n\nexport function TransactionsTable() {\n  const isMobile = useMedia('(max-width: 767px)');\n  const [itemOffset, setItemOffset] = useState(0);\n\n  const { data } = useGetTransactionsQuery(itemOffset);\n\n  if (!data) {\n    return;\n  }\n\n  let { transactions, length } = data;\n  const itemsPerPage = 5;\n  const pageCount = Math.ceil(length / itemsPerPage);\n  // зробити що коли менше нуля кількість сторінок то не рендерить пагінацію\n\n  return (\n    <>\n      <TableWrapper>\n        {!isMobile && (\n          <>\n            <thead>\n              <TableHead>\n                <TableHeadItem>Date</TableHeadItem>\n                <TableHeadItem>Type</TableHeadItem>\n                <TableHeadItem>Category</TableHeadItem>\n                <TableHeadItem>Comment</TableHeadItem>\n                <TableHeadItem>Sum</TableHeadItem>\n                <TableHeadItem>Balance</TableHeadItem>\n              </TableHead>\n            </thead>\n            <tbody>\n              {transactions.map(\n                ({ _id, date, type, category, comment, sum, balance }) => (\n                  <Data key={_id}>\n                    <DataItem>{fixDate(date)}</DataItem>\n                    <DataItem>{type === true ? '+' : '-'}</DataItem>\n                    <DataItem style={{ textAlign: 'left' }}>\n                      {category}\n                    </DataItem>\n                    <DataItem style={{ textAlign: 'left' }}>\n                      <DataComment>{comment}</DataComment>\n                    </DataItem>\n                    <DataItem style={{ textAlign: 'right', fontWeight: '700' }}>\n                      <DataSum type={type.toString()}>{sum}</DataSum>\n                    </DataItem>\n                    <DataItem style={{ textAlign: 'right' }}>\n                      {balance}\n                    </DataItem>\n                  </Data>\n                )\n              )}\n            </tbody>\n          </>\n        )}\n      </TableWrapper>\n\n      {isMobile && (\n        <>\n          {transactions.map(\n            ({ _id, date, type, category, comment, sum, balance }) => (\n              <DataMob key={_id} type={type.toString()}>\n                <DataItemMob>\n                  <HeadItemMob>Date</HeadItemMob>\n                  {fixDate(date)}\n                </DataItemMob>\n                <DataItemMob>\n                  <HeadItemMob>Type</HeadItemMob>\n                  {type === true ? '+' : '-'}\n                </DataItemMob>\n                <DataItemMob>\n                  <HeadItemMob>Category</HeadItemMob>\n                  {category}\n                </DataItemMob>\n                <DataItemMob>\n                  <HeadItemMob>Comment</HeadItemMob>\n                  <DataComment>{comment}</DataComment>\n                </DataItemMob>\n                <DataItemMob style={{ fontWeight: '700' }}>\n                  <HeadItemMob>Sum</HeadItemMob>\n                  <DataSum type={type.toString()}>{sum}</DataSum>\n                </DataItemMob>\n                <DataItemMob>\n                  <HeadItemMob>Balance</HeadItemMob>\n                  {balance}\n                </DataItemMob>\n              </DataMob>\n            )\n          )}\n        </>\n      )}\n\n      {pageCount > 1 && (\n        <PaginatedItems pageCount={pageCount} setItemOffset={setItemOffset} />\n      )}\n    </>\n  );\n}\n","import * as Yup from 'yup';\nlet patternTwoDigisAfterComma = /^\\d+(\\.\\d{0,2})?$/;\nexport const TransactionSchema = Yup.object().shape({\n  type: Yup.boolean()\n    .oneOf([true, false])\n    .required('Please indicate the type of your transaction'),\n  sum: Yup.number()\n    .typeError('Sum should be a number')\n    .positive()\n    .min(1, 'Sum value should be more than 1')\n    .max(\n      1000000000,\n      \"Can't confirm so big sum -looks like we will have a problems with law\"\n    )\n    .test('is-decimal', 'Decimal part - 2 digit', val => {\n      if (val !== undefined) {\n        return patternTwoDigisAfterComma.test(val);\n      }\n      return true;\n    })\n    .required('This field is requried'),\n  comment: Yup.string()\n    .typeError('Should be a string')\n    .min(0)\n    .max(30, 'Try to make your comment a bit shorter - 30 symbols maximum'),\n\n  category: Yup.string().oneOf([\n    'Main',\n    'Food',\n    'Auto',\n    'Development',\n    'Children',\n    'House',\n    'Education',\n    'Other',\n  ]),\n});\n","import moment from 'moment';\n\nexport const isValidDate = currentDate => {\n  const today = moment().subtract(0, 'day');\n  return currentDate.isBefore(today);\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Title = styled.h2`\n  margin-bottom: 40px;\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 1.5;\n  text-align: center;\n  color: #000000;\n  @media (min-width: 768px) {\n    line-height: 45px;\n    font-size: 30px;\n  }\n`;\n\nexport const TransactionForm = styled(Form)`\n  margin: 0 0 20px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  &:not(:last-child) {\n    margin-top: 40px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 395px;\n  }\n`;\n\nconst InputStyle = `\n  display: inline-block;\n  width:280px;\n  padding: 0;\n  padding-left:20px;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid var(--disabled-grey-text-color);\n  outline: none;\n  transition: border 250ms linear;\n  line-height: 1.47;\n  color: var(--primary-text-color);\n  cursor: pointer;\n  &::placeholder {\n    color:#bdbdbd;\n  }\n\n  &:focus,\n  &:hover {\n    border-bottom: 1px solid var(--accent-color-blue);\n  }\n`;\n\nexport const CheckboxWrapp = styled.label`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 20px;\n  cursor: pointer;\n`;\n\nexport const CheckboxInput = styled(Field)`\n  opacity: 0;\n  width: 0;\n  height: 0;\n`;\n\nexport const CheckboxSlider = styled.span`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  width: 80px;\n  height: 40px;\n  border: 1px solid #e0e0e0;\n  border-radius: 30px;\n`;\n\nexport const CheckboxPoint = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  content: '';\n  width: 44px;\n  height: 44px;\n  border-radius: 100%;\n  right: -1px;\n  bottom: -2px;\n  background-color: ${prop =>\n    prop.isChecked ? 'var(--accent-color-grean)' : 'var(--accent-color-red)'};\n  transform: ${prop => (prop.isChecked ? 'translateX(-38px)' : '')};\n  transition: 0.4s;\n  box-shadow: ${prop =>\n    prop.isChecked\n      ? '0px 6px 15px rgba(36, 204, 167, 0.5)'\n      : '0px 6px 15px rgba(255, 101, 150, 0.5)'};\n`;\n\nexport const CheckboxText = styled.span`\n  display: block;\n  color: var(--disabled-grey-text-color);\n  transition: color 250ms linear;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.4;\n`;\n\nexport const CheckboxTextIncome = styled(CheckboxText)`\n  order: -1;\n  margin-right: 20px;\n  ${CheckboxInput}:checked ~ & {\n    color: var(--accent-color-grean);\n  }\n`;\n\nexport const CheckboxTextExpense = styled(CheckboxText)`\n  margin-left: 20px;\n  ${CheckboxInput}:not(:checked) ~ & {\n    color: var(--accent-color-red);\n  }\n`;\nexport const SumAndDateWrapp = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-end;\n    margin-bottom: 40px;\n    width: 100%;\n  }\n`;\n\nexport const SumWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  vertical-align: bottom;\n  overflow: visible;\n  position: relative;\n  @media screen and (max-width: 767px) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const DateWrap = styled.div`\n  padding: 0 0 0 20px;\n  display: flex;\n  flex-direction: row;\n  border-bottom: 1px solid var(--disabled-grey-text-color);\n  position: relative;\n  transition: border 250ms linear;\n  &:focus,\n  &:hover {\n    border-bottom: 1px solid var(--accent-color-blue);\n  }\n  @media screen and (max-width: 767px) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const DatetimeInput = styled.input`\n  ${InputStyle}\n  padding: 0;\n  text-align: left;\n  outline: none;\n  font-size: 18px;\n  line-height: 1.47;\n  border: 0;\n  &:focus,\n  &:hover {\n    border-bottom: none;\n  }\n  width: 260px;\n  @media screen and (min-width: 768px) {\n    width: 160px;\n  }\n`;\n\nexport const CalendarWrap = styled.div`\n  width: 24px;\n  height: 24px;\n  pointer-events: none;\n  position: absolute;\n  right: 20px;\n`;\n\nexport const SumField = styled(Field)`\n  ${InputStyle}\n  display: block;\n  position: static;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.47;\n  // @media screen and (max-width: 767px) {\n  //   margin-bottom: 40px;\n  // }\n  @media screen and (min-width: 768px) {\n    width: 180px;\n    text-align: center;\n    margin-right: 30px;\n    padding: 0 0 0 5px;\n  }\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  &[type='number'] {\n    -moz-appearance: textfield;\n  }\n`;\nexport const TextAreaWrap = styled.div`\n  position: relative;\n  width: 100%;\n  margin-bottom: 40px;\n`\n\nexport const Textarea = styled.textarea`\n  ${InputStyle}\n  box-sizing: border-box;\n  //margin-bottom: 40px;\n  resize: none;\n  font-size: 18px;\n  @media screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const Error = styled.p`\n  color: red;\n  font-size: 10px;\n  position: absolute;\n  //top: 30px;\n  left: 0px;\n  bottom: -10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","export const selectStyles = {\n  container: (baseStyles, state) => ({\n    ...baseStyles,\n    width: '100%',\n    outline: 'none',\n    border: 'none',\n    marginBottom: '40px',\n    '@media screen and (max-width:767px)': {\n      width: '280px',\n    },\n  }),\n  valueContainer: (baseStyles, state) => ({\n    ...baseStyles,\n  }),\n  control: (baseStyles, state) => ({\n    ...baseStyles,\n    border: 'none',\n    outline: 'none',\n    borderBottom: '1px solid var(--disabled-grey-text-color)',\n    transition: 'border 250ms linear',\n    boxShadow: 'none',\n    borderRadius: '0',\n    cursor: 'pointer',\n    ':hover': {\n      borderBottom: '1px solid var(--accent-color-blue)',\n    },\n    ':focus': {\n      borderBottom: '1px solid var(--accent-color-blue)',\n    },\n  }),\n  menu: (baseStyles, state) => ({\n    ...baseStyles,\n    backgroundColor: 'rgba(255, 255, 255, 0.7)',\n    boxShadow: '0px 6px 15px 0px rgba(0, 0, 0, 0.1)',\n    backdropFilter: 'blur(25px)',\n    borderRadius: '20px',\n    overflow: 'hidden',\n  }),\n  menuList: (baseStyles, state) => ({\n    ...baseStyles,\n  }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    const color = '#fff';\n    return {\n      ...styles,\n      backgroundColor: isDisabled\n        ? undefined\n        : isSelected\n        ? data.color\n        : isFocused\n        ? color\n        : undefined,\n      color: isDisabled\n        ? '#ccc'\n        : isSelected\n        ? color\n          ? '#ff6596'\n          : 'black'\n        : data.color,\n      cursor: isDisabled ? 'not-allowed' : 'pointer',\n\n      ':active': {\n        ...styles[':active'],\n        backgroundColor: !isDisabled\n          ? isSelected\n            ? data.color\n            : color\n          : undefined,\n      },\n      ':hover': {\n        color: 'var(--accent-color-red)',\n        backgroundColor: 'white',\n      },\n      transition: 'color 250ms linear, background-color 250ms linear',\n      fontSize: '18px',\n      fontWeight: '400',\n    };\n  },\n\n  indicatorSeparator: (baseStyles, state) => ({\n    ...baseStyles,\n    display: 'none',\n  }),\n  placeholder: (baseStyles, state) => ({\n    ...baseStyles,\n    color: '#bdbdbd',\n    fontSize: '18px',\n  }),\n};\n","import Select from 'react-select';\nimport { selectStyles } from './addTransactionFormSelect.styled';\n\nconst options = [\n  { value: 'Main', label: 'Main' },\n  { value: 'Food', label: 'Food' },\n  { value: 'Auto', label: 'Auto' },\n  { value: 'Development', label: 'Development' },\n  { value: 'Children', label: 'Children' },\n  { value: 'House', label: 'House' },\n  { value: 'Education', label: 'Education' },\n  { value: 'Other', label: 'Other' },\n];\n\nexport const MySelect = props => (\n  <Select\n    options={options}\n    isClearable\n    placeholder=\"Select a category\"\n    styles={selectStyles}\n    maxMenuHeight={350}\n    closeMenuOnClick={false}\n    {...props}\n  />\n);\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.25);\n  overflow-y: auto;\n\n  @media screen and (max-width: 767px) {\n    background-color: var(--primary-background-color);\n  }\n`;\n\nexport const Modal = styled.div`\n  display: flex;\n  justify-content: center;\n  background-color: var(--primary-background-color);\n  padding: 20px 0 55px 0;\n  min-height: 585px;\n\n  @media screen and (max-width: 767px) {\n    width: 100%;\n    padding-top: 80px;\n    padding-bottom: 80px;\n  }\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 540px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 20px;\n    padding-bottom: 60px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 500px;\n    border-radius: 20px;\n  }\n`;\n\nexport const TransactionFormButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto 0 auto;\n  min-width: 300px;\n  min-height: 50px;\n  padding: 0;\n  border-radius: 20px;\n  border: ${props =>\n    props.primary\n      ? '1px solid var(--accent-color-grean)'\n      : '1px solid var(--accent-color-blue)'};\n  font-size: 18px;\n  line-height: 1.5;\n  text-align: center;\n  background-color: ${props =>\n    props.primary ? 'var(--accent-color-grean)' : 'transparent'};\n  color: ${props =>\n    props.primary ? 'var(--secondary-text-color)' : 'var(--accent-color-blue)'};\n  transition: background-color 250ms linear;\n\n  &:hover {\n    background-color: ${props =>\n      props.primary ? '#20b091' : 'var(--secondary-background-color)'};\n  }\n`;\n\nexport const CloseButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  border-radius: 100%;\n  background-color: var(--primary-background-color);\n  border: 0;\n  transition: box-shadow 250ms linear;\n  &:hover {\n    box-shadow: 0px 0px 5px var(--accent-color-grean);\n  }\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { TransactionSchema } from '../helpers/formikTransactionSchema';\nimport { useState } from 'react';\nimport 'react-datetime/css/react-datetime.css';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport { isValidDate } from '../helpers/checkValidDate';\nimport { Oval } from 'react-loader-spinner';\nimport {\n  CheckboxWrapp,\n  CheckboxInput,\n  CheckboxTextExpense,\n  CheckboxSlider,\n  CheckboxPoint,\n  CheckboxTextIncome,\n  Title,\n  SumAndDateWrapp,\n  SumWrap,\n  CalendarWrap,\n  DateWrap,\n  SumField,\n  TextAreaWrap,\n  Textarea,\n  DatetimeInput,\n  Error,\n} from './addTransanctionForm.styled';\nimport { MySelect } from './addTransactionFormSelect/addTransactionFormSelect';\nimport { TransactionFormButton } from '../addTransactionModal/addTransactionModal.styled';\nimport { TransactionForm } from './addTransanctionForm.styled';\nimport { useCreateTransactionMutation } from 'redux/transactionsSlice';\nimport Notiflix from 'notiflix';\nimport sprite from '../../../images/svg/symbol-defs.svg';\nimport { FiPlus, FiMinus } from 'react-icons/fi';\n\nNotiflix.Notify.init({\n  width: 'auto',\n  position: 'top-right',\n  distance: '50px',\n  borderRadius: '10px',\n  clickToClose: true,\n  useIcon: false,\n  fontSize: '23px',\n});\n\nconst currentDate = moment().format('DD.MM.YYYY');\n\nconst initialValues = {\n  type: false,\n  sum: '',\n  date: new Date().toString(),\n  comment: '',\n  category: '',\n};\n\nconst AddTransactionForm = ({ onCancel }) => {\n  const [transactionType, setTransactionType] = useState(false);\n  const [addTransaction, { isLoading }] = useCreateTransactionMutation();\n\n  return (\n    <div>\n      <Title>Add Transaction</Title>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={TransactionSchema}\n        onSubmit={async values => {\n          const { category, sum, comment, date } = values;\n          const newTransaction = {\n            type: transactionType,\n            category: category === '' ? 'Other' : category,\n            sum: Number(sum),\n            date: date,\n            month: Number(moment(date).format('MM')),\n            year: Number(moment(date).format('YYYY')),\n            comment: comment === '' ? 'No comment' : comment,\n          };\n          await addTransaction(newTransaction)\n            .then(res => {\n              if (res.error) {\n                onCancel();\n                return res.error.data.message === 'You spend too much!'\n                  ? Notiflix.Notify.failure('You spend too much!')\n                  : Notiflix.Notify.failure('Something went wrong');\n              }\n              onCancel();\n              Notiflix.Notify.success('New transaction added successfully');\n            })\n            .catch(error => {\n              onCancel();\n              Notiflix.Notify.failure('Something went wrong');\n            });\n        }}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          setFieldValue,\n          values,\n          errors,\n          touched,\n          isValid,\n          dirty,\n        }) => (\n          <TransactionForm autoComplete=\"off\">\n            <CheckboxWrapp>\n              <CheckboxInput\n                type=\"checkbox\"\n                id=\"type\"\n                name=\"type\"\n                tabIndex=\"-1\"\n                onChange={() => {\n                  setTransactionType(!transactionType);\n                }}\n                checked={transactionType}\n              />\n\n              <CheckboxSlider>\n                <CheckboxPoint isChecked={transactionType}>\n                  {transactionType ? (\n                    <FiPlus\n                      style={{ color: 'white', width: '30px', height: '30px' }}\n                    />\n                  ) : (\n                    <FiMinus\n                      style={{ color: 'white', width: '30px', height: '30px' }}\n                    />\n                  )}\n                </CheckboxPoint>\n              </CheckboxSlider>\n              {touched.type && errors.type && <Error>{errors.type}</Error>}\n              <CheckboxTextIncome>Income</CheckboxTextIncome>\n              <CheckboxTextExpense>Expense</CheckboxTextExpense>\n            </CheckboxWrapp>\n\n            {!transactionType && (\n              <MySelect\n                name=\"category\"\n                onChange={data => setFieldValue('category', data?.value)}\n              />\n            )}\n            {touched.category && errors.category && (\n              <Error>{errors.category}</Error>\n            )}\n\n            <SumAndDateWrapp>\n              <SumWrap>\n                <SumField\n                  type=\"number\"\n                  id=\"sum\"\n                  name=\"sum\"\n                  placeholder=\"Amount 0.00\"\n                  step=\".10\"\n                />\n                {touched.sum && errors.sum && <Error>{errors.sum}</Error>}\n              </SumWrap>\n              <DateWrap>\n                <Datetime\n                  renderInput={props => <DatetimeInput {...props} />}\n                  id=\"date\"\n                  closeOnSelect={true}\n                  closeOnClickOutside={true}\n                  name=\"date\"\n                  initialValue={currentDate}\n                  isValidDate={isValidDate}\n                  dateFormat=\"DD.MM.YYYY\"\n                  timeFormat={false}\n                  onChange={e => setFieldValue('date', new Date(e).toString())}\n                  inputProps={{\n                    onKeyDown: e => {\n                      e.preventDefault();\n                    },\n                  }}\n                />\n                <CalendarWrap>\n                  <svg width=\"18px\" height=\"20px\">\n                    <use href={`${sprite}#icon-calendar`} />\n                  </svg>\n                </CalendarWrap>\n              </DateWrap>\n            </SumAndDateWrapp>\n            <TextAreaWrap>\n              <Textarea\n                id=\"comment\"\n                name=\"comment\"\n                placeholder=\"Comment\"\n                onChange={handleChange}\n              />\n              {touched.comment && errors.comment && <Error>{errors.comment}</Error>}\n            </TextAreaWrap>\n            \n            <TransactionFormButton\n              primary\n              type=\"submit\"\n              disabled={isLoading ? true : false}\n            >\n              {isLoading ? (\n                <Oval\n                  width={30}\n                  height={30}\n                  color=\"white\"\n                  ariaLabel=\"oval-loading\"\n                  secondaryColor=\"#000000\"\n                />\n              ) : (\n                <span>ADD</span>\n              )}\n            </TransactionFormButton>\n          </TransactionForm>\n        )}\n      </Formik>\n      <TransactionFormButton type=\"button\" onClick={onCancel}>\n        CANCEL\n      </TransactionFormButton>\n    </div>\n  );\n};\n\nexport default AddTransactionForm;\n","import React, { Fragment } from 'react';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport AddTransactionForm from '../addTransactionForm/addTransactionForm';\nimport { Backdrop, Modal, CloseButton } from './addTransactionModal.styled';\nimport { VscChromeClose } from 'react-icons/vsc';\nimport Media from 'react-media';\nimport { useDispatch } from 'react-redux';\nimport { toggleModalOpen } from '../../../redux/userSlice';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst AddTransactionModal = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window.addEventListener('keydown', onEscapeClose);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', onEscapeClose);\n      document.body.style.overflow = 'auto';\n    };\n  });\n  const handleModalClose = () => dispatch(toggleModalOpen(false));\n\n  const onEscapeClose = e => {\n    if (e.code === 'Escape') {\n      dispatch(toggleModalOpen(false));\n    }\n  };\n  const onBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      dispatch(toggleModalOpen(false));\n    }\n  };\n  return createPortal(\n    <Backdrop onClick={onBackdropClick}>\n      <Modal>\n        <Media\n          queries={{\n            small: '(max-width: 767px)',\n            medium: '(min-width: 768px) and (max-width: 1199px)',\n            large: '(min-width: 1280px)',\n          }}\n        >\n          {matches => (\n            <Fragment>\n              {matches.medium && (\n                <CloseButton type=\"button\" onClick={handleModalClose}>\n                  <VscChromeClose style={{ width: '16px', height: '16px' }} />\n                </CloseButton>\n              )}\n              {matches.large && (\n                <CloseButton type=\"button\" onClick={handleModalClose}>\n                  <VscChromeClose style={{ width: '16px', height: '16px' }} />\n                </CloseButton>\n              )}\n            </Fragment>\n          )}\n        </Media>\n\n        <AddTransactionForm onCancel={handleModalClose} />\n      </Modal>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default AddTransactionModal;\n","import styled from 'styled-components';\n\nexport const TransactionButton = styled.button`\n  width: 44px;\n  height: 44px;\n  z-index: 2;\n  background-color: #24cca7;\n  color: #ffffff;\n  padding: 12px;\n  border-radius: 100%;\n  border: 0;\n  box-shadow: 0 10px 10px -7px #24cca7;\n  transition: background-color 250ms linear;\n  position: fixed;\n  right: 20px;\n  bottom: 20px;\n\n  @media (max-width: 768px) {\n    position: sticky;\n    bottom: 20px;\n    left: 90vw;\n  }\n  @media (min-width: 768px) {\n    position: fixed;\n    bottom: 40px;\n    right: 40px;\n  }\n  &:hover {\n    background-color: #20b091;\n  }\n`;\n","import React from 'react';\nimport AddTransactionModal from '../addTransactionModal/addTransactionModal';\nimport { TransactionButton } from './addTransactionButton.styled';\nimport { FiPlus } from 'react-icons/fi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleModalOpen } from '../../../redux/userSlice';\n\nconst AddTransactionButton = () => {\n  const dispatch = useDispatch();\n  const { isModalOpen } = useSelector(state => state.userInformation);\n\n  const handleClick = () => {\n    dispatch(toggleModalOpen(true));\n  };\n  return (\n    <>\n      {!isModalOpen && (\n        <TransactionButton type=\"button\" onClick={handleClick}>\n          <FiPlus style={{ width: '20px', height: '20px' }} />\n        </TransactionButton>\n      )}\n      {isModalOpen && <AddTransactionModal onCloseModal={handleClick} />}\n    </>\n  );\n};\n\nexport default AddTransactionButton;\n","import styled from 'styled-components';\n\nexport const HomeWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    padding-top: 10px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding-top: 46px;\n    padding-left: 69px;\n    flex-shrink: 0;\n    flex-grow: 1;\n  }\n`;\n","import { TransactionsTable } from 'components/transactionTable/transactionTable';\nimport AddTransactionButton from 'components/addTransaction/addTransactionButton/addTransactionButton';\nimport Balance from 'components/balance/balance';\nimport Media from 'react-media';\nimport { HomeWrapper } from './homeTab.styled';\n\nexport const HomeTab = () => {\n  return (\n    <HomeWrapper>\n      <Media query=\"(max-width: 767px)\" render={() => <Balance />} />\n      <TransactionsTable />\n      <AddTransactionButton />\n    </HomeWrapper>\n    \n  );\n};\n\nexport default HomeTab;\n"],"names":["fixDate","date","dateString","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","PaginatedItems","pageCount","setItemOffset","breakLabel","onPageChange","event","selected","pageRangeDisplayed","previousLabel","nextLabel","renderOnZeroPageCount","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","TableWrapper","styled","TableHead","TableHeadItem","Data","DataItem","DataComment","DataSum","props","type","DataMob","HeadItemMob","DataItemMob","TransactionsTable","isMobile","useMedia","useState","itemOffset","data","useGetTransactionsQuery","transactions","length","Math","ceil","map","_id","category","comment","sum","balance","style","textAlign","fontWeight","patternTwoDigisAfterComma","TransactionSchema","Yup","shape","oneOf","required","typeError","positive","min","max","test","val","undefined","isValidDate","currentDate","today","moment","subtract","isBefore","Title","TransactionForm","Form","InputStyle","CheckboxWrapp","CheckboxInput","Field","CheckboxSlider","CheckboxPoint","prop","isChecked","CheckboxText","CheckboxTextIncome","CheckboxTextExpense","SumAndDateWrapp","SumWrap","DateWrap","DatetimeInput","CalendarWrap","SumField","TextAreaWrap","Textarea","Error","selectStyles","container","baseStyles","state","width","outline","border","marginBottom","valueContainer","control","borderBottom","transition","boxShadow","borderRadius","cursor","menu","backgroundColor","backdropFilter","overflow","menuList","option","styles","isDisabled","isFocused","isSelected","color","fontSize","indicatorSeparator","display","placeholder","options","value","label","MySelect","isClearable","maxMenuHeight","closeMenuOnClick","Backdrop","Modal","TransactionFormButton","primary","CloseButton","Notiflix","position","distance","clickToClose","useIcon","format","initialValues","onCancel","transactionType","setTransactionType","useCreateTransactionMutation","addTransaction","isLoading","validationSchema","onSubmit","values","newTransaction","Number","then","res","error","message","catch","handleSubmit","handleChange","setFieldValue","errors","touched","isValid","dirty","autoComplete","id","name","tabIndex","onChange","checked","height","step","renderInput","closeOnSelect","closeOnClickOutside","initialValue","dateFormat","timeFormat","e","inputProps","onKeyDown","preventDefault","href","sprite","disabled","ariaLabel","secondaryColor","onClick","modalRoot","document","querySelector","dispatch","useDispatch","useEffect","window","addEventListener","onEscapeClose","body","removeEventListener","handleModalClose","toggleModalOpen","code","createPortal","target","currentTarget","queries","small","medium","large","matches","Fragment","TransactionButton","isModalOpen","useSelector","userInformation","handleClick","onCloseModal","HomeWrapper","HomeTab","query","render"],"sourceRoot":""}